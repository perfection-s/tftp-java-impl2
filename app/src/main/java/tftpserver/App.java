/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package tftpserver;

import lombok.extern.java.Log;
import tftpserver.db.InMemDb;
import tftpserver.handlers.RequestHandler;

import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.util.logging.Level;

@Log
public class App {

    public static void main(String[] args) {
        // Instantiate the DB
        InMemDb.getDb();
        log.log(Level.FINER, "Created the InMemDb");

        while (true) {
            try (DatagramSocket tftpSocket = new DatagramSocket(69)) {

                // Lets create a sufficiently big buffer because the
                // request packets have filenames which can be really big
                int bufLength = 1024;
                byte[] requestPacketBuffer = new byte[bufLength];

                DatagramPacket requestPacket = new DatagramPacket(requestPacketBuffer, bufLength);
                tftpSocket.receive(requestPacket);
                RequestHandler.verifyAndHandle(requestPacket);

            } catch (IOException e) {
                e.printStackTrace();
                System.exit(-1);
            } catch (InvalidRequestPacketException e) {
                e.printStackTrace();
                // FIXME This is again a strange case. This must never happen unless
                //  a client has been erroneously programmed.
                //  Must send an ERR packet to the client
            }
        }
    }
}
